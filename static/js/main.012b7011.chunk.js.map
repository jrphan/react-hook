{"version":3,"sources":["components/colorBox/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["ColorBox","props","useState","localStorage","getItem","color","setColor","className","style","backgroundColor","onClick","newColor","Math","trunc","random","setItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAqCeA,MAvBf,SAAkBC,GACb,MAA0BC,oBAAS,WAEhC,OADkBC,aAAaC,QAAQ,eAAiB,cAD3D,mBAAOC,EAAP,KAAcC,EAAd,KAYD,OACI,qBACIC,UAAY,YACZC,MAAS,CAAEC,gBAAkBJ,GAC7BK,QAXR,WACI,IAAMC,EAZU,CAAC,MAAO,OAAQ,SAAU,QAAS,SACnCC,KAAKC,MAAsB,EAAhBD,KAAKE,WAYhCR,EAASK,GAETR,aAAaY,QAAQ,aAAcJ,OCZ5BK,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCKSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.012b7011.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport './colorBox.scss'\r\n\r\n// ColorBox.propTypes = {\r\n    \r\n// };\r\n\r\nfunction getRandomColor() {\r\n    const color__list = ['red', 'blue', 'yellow', 'black', 'white'];\r\n    const randomIndex = Math.trunc(Math.random() * 5);\r\n    return color__list[randomIndex];\r\n}\r\n\r\nfunction ColorBox(props) {\r\n     const [color, setColor] = useState(() => {\r\n        const initColor = localStorage.getItem('box__color') || 'deeppink';\r\n        return initColor\r\n     });\r\n\r\n    function handleBoxClick () {\r\n        const newColor = getRandomColor();\r\n        setColor(newColor);\r\n\r\n        localStorage.setItem('box__color', newColor);\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className = \"color-box\"\r\n            style = {{ backgroundColor : color}}\r\n            onClick = {handleBoxClick}\r\n        >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ColorBox;","// import logo from './logo.svg';\nimport './App.scss';\nimport ColorBox from './components/colorBox';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ColorBox/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}